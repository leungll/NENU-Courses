%图像部分
f=imread('pout.tif');%读图像
g=imread('peppers.png');
[M,N]=size(f);%图像大小，M图像的高，N图像的宽
whos f;%图像信息
imshow(f);%显示图像
f1=im2bw(f,0.4);%图像二值化，第二个参数为阈值
g1=rgb2gray(g);%彩色图像转灰阶
%subplot(r,c,i),第r行c列第i个
f2=f(100:200,100:200);%截取矩阵完成图像剪切
f3=imcrop(f,[100 100 100 100]);%图像剪切适合彩色和灰度图像，彩色图像再加一个参数[XMIN YMIN WIDTH HEIGHT]; 
f4=imrotate(f,45, 'bilinear','crop');%图像旋转
%1.'nearest'Nearest neighbor interpolation 
%2.'bilinear' Bilinear interpolation(双线性差值)
%3.'bicubic' Bicubic interpolation.(双三次差值)
%4.'crop'使输出图像B与输入图像A大小相同，裁剪旋转后的图像以适合
%5.'loose'使输出图像B足够大以包含整个旋转图像。B一般大于A
f5=f(end:-1:1,:)%垂直镜像
f6=f(:,end:-1:1);%水平镜像
%彩色图像C=A(:,end:-1:1,:);
f7=imresize(f,[100,200],'bicubic');%图像缩放
%1.第二个参数可以为0.5之类的也可以是[100,200]之类的具体大小
%2.'nearest'Nearest neighbor interpolation 
%3.'bilinear' Bilinear interpolation(双线性差值)
%4.'bicubic' Bicubic interpolation.(双三次差值)
f8=imadjust(f,[0.3,0.7],[0,1],2);%灰度图像进行亮度变换
%0.3到0.7中间的值映射为0到1之间的值 低于0.3的映射成0，高于0.7的映射成1
imhist(f);%灰度直方图
f9=histeq(f);%直方图均衡化 减少图像的灰度级以换取对比度的加大
%imhist和histeq只能作用于灰度或者二值图像
f10=imnoise(f,'gaussian',0,0.02);%图像加噪 均值方差 default 0，0.01 
f11=imnoise(f,'salt & pepper',0.35)%图像加噪 频率  default 0.05
x1=fspecial('average',3);
f12=imfilter(f10,x1);%以上两行分别为生成模板，做卷积（噪声图像和模板）以完成均值滤波
f13=medfilt2(f11);%实现中值滤波
%I1=im2double(f);
x2=fspecial('laplacian',0);
%f14=imfilter(I1,x2);
f14=imfilter(f,x2);%laplacian算子对图像进行锐化
x3=fspecial('sobel');
f15=imfilter(f,x3);%sobel算子对图像进行锐化
subplot(4,4,1),imshow(f);
subplot(4,4,2),imshow(f1);
subplot(4,4,3),imshow(f2);
subplot(4,4,4),imshow(f3);
subplot(4,4,5),imshow(f4);
subplot(4,4,6),imshow(f5);
subplot(4,4,7),imshow(f6);
subplot(4,4,8),imshow(f7);
subplot(4,4,9),imshow(f8);
subplot(4,4,10),imshow(f9);
subplot(4,4,11),imshow(f10);
subplot(4,4,12),imshow(f11);
subplot(4,4,13),imshow(f12)
subplot(4,4,14),imshow(f13);
subplot(4,4,15),imshow(f14);
subplot(4,4,16),imshow(f15);